dubbo是基于netty NIO的非阻塞并行调用通信。（阻塞 非阻塞 异步 同步的区别）
dubbo的通信方式有3种类型：
1.异步，有返回值
 <dubbo:method name="sayHello" async="true"></dubbo:method>
  Future<String> future = RpcContext.getContext().getFuture();
  hello = future.get();
2.异步：无返回值
  <dubbo:method name="sayHello" return="false"></dubbo:method>

3.异步，变同步（默认的通信方式）
   A.当前线程怎么让他“暂停”，等结果回来后，再执行
   B.socket是一个全双工的通信方式，那么在多线程的情况下如何知道哪个返回结果对应原先那条线程上的调用
    通过一个全局唯一的ID来做consumer和provider来回传输